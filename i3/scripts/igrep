#!/bin/bash

# igrep (Interactive GNU Grep) 0.1
# Copyright (C) 2024 Blau Araujo <blau@debxp.org>
# Licença GPLv3+: GNU GPL versão 3 ou posterior <https://gnu.org/licenses/gpl.html>
# Este é um software livre: você é livre para alterá-lo e redistribuí-lo.
# NÃO HÁ QUALQUER GARANTIA, na máxima extensão permitida em lei.
# 
# Escrito por Blau Araujo e NRZCode

finder() {
    local first last
    (( first = (current_page - 1) * height + 1 ))
    (( last = (current_page - 1) * height + height ))
    clear
    echo 'Carregando resultados...'
    local list=$(printf '%s\n' "${buffer[@]}" | grep -Pn --color=always "$1")
    clear
    local count=$(wc -l <<< "$list")
    (( pages = (count / height) + 1 ))
    local plist=$(sed "$first,$last!d" <<< "$list")
    (( ${#list} )) || plist='Nenhum resultado encontrado...'
    echo "$plist"
    printf '%*s\r' $COLUMNS "$current_page / $pages"
}

main() {
    lines=$(tput lines)
    (( height = lines - 1 ))
    mapfile -t buffer

    current_page=1
    finder "$regex"
    while :; do
        read -erp "$prompt" cmd < /dev/tty
        history -s -- "$cmd"
        case ${cmd::1} in
            /)      # regex find
                    regex=${cmd:1}
                    current_page=1
                    ;;
            [1-9])  # print selected and quit
                    [[ $cmd =~ ^[1-9][0-9]*$ && $cmd -le ${#buffer[@]} ]] && {
                        result="${buffer[cmd-1]}"
                        break
                    }
                    ;;
            p)      # previous page
                    [[ current_page -eq 1 ]] || ((current_page--))
                    ;;
            n)      # next page
                    [[ current_page -eq pages ]] || ((current_page++))
                    ;;
            [Qq])   # quit
                    break
        esac
        clear
        finder "$regex"
    done
}

grep_args=("$@")

while getopts ':n' opt; do
    case $opt in
        n)  echo igrep: Opção inválida: -n
            exit 1
            ;;
        ?)  continue
    esac
    shift
done

exec 3>&1 1>&2
tput smcup
result=''
regex=''
prompt=': '
clear
echo 'Carregando resultados...'

# Modificação: Utilizar find para pesquisa recursiva em arquivos
#main < <(find . -type f -exec grep --color=never -I "${grep_args[@]}" {} +)
main < <(find . -type f -exec grep --color=never -I "${grep_args[@]}" {} + 2>/dev/null | grep -v ': É um diretório')

tput rmcup
exec 1>&3
[[ $result ]] && echo $result || :

